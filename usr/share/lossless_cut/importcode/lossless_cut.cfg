[File lossless_cut.cfg]
#-------------------------------------
# Name: lossless_cut.cfg
# Project: Lossless Cuts
# Configuration file
# Author: 	R.D. Vaughan
# Version:
# 0.1.0 Initial development
# 0.1.1 Alpha release
# 0.1.2 Corrected grammer and wording in documentation
# 0.1.3 Added a "dvb_subtitles" section
#       Added a "remove_recorded" section
# 0.1.4 Change the "dvb_subtitles" section description of the
#       "background_alpha" to not include a percent sign as it
#       caused issues with initial lossless_cut.cfg file creation
# 0.1.5 Added an "error_detection" section
#
# Copyright (C) 2012 R.D. Vaughan
# rdvLaunchpad@gmail.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# License:Creative Commons GNU GPL v2
# (http://www.gnu.org/licenses/gpl-2.0.html)
#-------------------------------------
#
# All variables can be modified but only as documented. To change a variable
# value remove the leading '#' (if any) and change the value (after the ':' or "="). Limited editing
# is performed so be careful. Without caution you can cause Lossless Cut to fail or abort.
# NOTE: Do not surround variables with quotes even if it contains spaces. Except where explicitly
#       indicated (e.g. ccextractor_args).
#       e.g. the directory name "/home/my dir/my posters" is expressed as xyz=/home/my dir/my posters
#
# START  default variables section-----------------------------------------------------------------------
#
[defaults]
#
# Add any available metadata (title, subtitle, season/episode number and description) to the final mkv file
# Default: "true"
# Valid options: "true" or "false" with NO surrounding quotes
add_metadata=true
#
# Arguments passed to the CCextractor utility used in processing subtitle tracks
# Default: "%(ccextractor_args)s"
# Valid options: Must contain the strings:
#            -datapid %(subid)s -tpage %(subpage)s --defaultcolor "#ffd700" "%(recordedfile)s" "%(sub_filename)s"
#
# NOTE: The default is to include any subtitle colouring tags. Adding the option "--nofontcolor" will prevent such tags
#       from being added to the SRT subtitle track. Be warned that some video players do not convert the tags into
#       foreground and background colours so they show up as part of the subtitle text. MythTV supports these tags.
#
#       The default is to set the subtitle text colour yellow with --defaultcolor "#ffd700". This value can
#       be safely changed or removed entirely. The hex colour must be contained in quotes.
#
# WARNING: Do not modify these values unless you understand how CCextractor works
ccextractor_args=-teletext -datapid %(subid)s -tpage %(subpage)s --defaultcolor "#ffd700" -utf8 "%(recordedfile)s" -o "%(sub_filename)s"
#
# Delete the old mpg file rather than just rename it after processing is complete. This option
# is only relevant when using lossless_cut's "-r" option.
# Default: false
# Valid options: "true" or "false" with NO surrounding quotes
delete_old=false
#
# Keep the log file after the userjob has completed successfully
# Default: false
# Valid options: "true" or "false" with NO surrounding quotes
keep_log=true
#
# Specify a directory path where the job's log will be saved
# Default: "/tmp"
logpath=/var/log
#
# Specify the mkv metadata Movie title format string
# Default: %(title)s (%(release_year)s) e.g. "Terminator (1984)"
# Valid options: Must contain two strings "%(title)s" "%(releasedate)s"
#                with NO surrounding quotes
movie_format=%(title)s (%(releasedate)s)
#
# Specify the mkv metadata TV Series and episode title format string
# Default: %(series)s - S%(season_num)02dE%(episode_num)02d - %(episode)s
#          e.g. "Sanctuary - S01E01 - Pilot"
# Valid options: Must contain the strings "%(series)s" "%(season_num)02d"
#                "%(episode_num)02d" "%(episode)s" with NO surrounding quotes
tvseries_format=%(series)s - S%(season_num)02dE%(episode_num)02d - %(episode)s
#
# Strip any subtitle or secondary video or audio tracks from the final mkv video file
# Valid options: "true" or "false" with NO surrounding quotes
strip=false
#
# The temporary working directory path used when building the mkv video file
# Note: It is recommended to choose a different drive than your MythTV recording directory so
#       that you avoid excessive hard drive head thrashing during the loss less cut processing.
#       Excessive hard drive head thrashing may cause issues if MythTV is concurrently recording
#       a new video.
workpath=/myth/tmp
#
# END  default variables section---------------------------------------------------------------------------
#
# START  mythvidexport variables section-------------------------------------------------------------------
# All variables can be modified modify but only as documented. To change a variable
# remove the leading '#' (if any) and change the value (after the ':' or "="). Limited editing
# is performed so be careful. Without caution you can cause Lossless Cut to fail or abort.
# NOTE: Do not surround variables with quotes even if it contains spaces. Except where explicitly
#       indicated (e.g. ccextractor_args).
#       e.g. the directory name "/home/my dir/my posters" is expressed as xyz=/home/my dir/my posters
#
[mythvidexport]
#
#    Available strings:
#        %TITLE%:         series title
#        %SUBTITLE%:      episode title
#        %SEASON%:        season number
#        %SEASONPAD%:     season number, padded to 2 digits
#        %EPISODE%:       episode number
#        %EPISODEPAD%:    episode number, padded to 2 digits
#        %YEAR%:          year
#        %DIRECTOR%:      director
#        %HOSTNAME%:      backend used to record show
#        %STORAGEGROUP%:  storage group containing recorded show
#        %GENRE%:         first genre listed for a recording
#
# Note 1: These options will be overridden by the following MythTV database settings if they exist:
#         TVexportfmt, MOVIEexportfmt and GENERICexportfmt. These settings would only exist
#         if you previously used specific options with the "mythvidexport.py" script found here:
#         http://www.mythtv.org/wiki/Mythvidexport.py
#
# Note 2: When exporting to MythVideo any missing directories will be automatically created
#         conforming to the formats below or the MythTV database settings mentioned in Note #1.
#
# Note 3: When the configuration file is created the default subdirectory in MythVideo is set to "Review".
#
# Note 4: Use of the %GENRE% string can be problematic as the EPG and/or grabber data may not have a
#         genre. Also the grabber site may not be available. If no genre exists when exporting the
#         word "Unknown" will be used. This can be very confusing especially if it rarely happens.
#         It is advised to only use the %GENRE% string if you understand the risks.
#
## The directory path and video file name format for a TV Series when exporting to MythVideo
# Default: Review/%TITLE% - S%SEASONPAD%E%EPISODEPAD% - %SUBTITLE%
#
# Example: Television/%TITLE%/Season %SEASONPAD%/%TITLE% - S%SEASONPAD%E%EPISODEPAD% - %SUBTITLE%
#          Would be exported as: Television/Sanctuary/Season 02/Sanctuary - S02E01 - End of Nights.mkv
television=Review/%TITLE% - S%SEASONPAD%E%EPISODEPAD% - %SUBTITLE%
#
## The directory path and video file name format for a Movie when exporting to MythVideo
# Default: Review/%TITLE% (%YEAR%)
#
# Example: Movies/%TITLE% (%YEAR%)
#          Would be exported as: Movies/Next (2007).mkv
movie=Review/%TITLE% (%YEAR%)
#
## The directory path and video file name format for a Generic program when exporting to MythVideo
# Default: Review/%TITLE%: %SUBTITLE%
#
# Example: Videos/%TITLE%: %SUBTITLE%
#          Would be exported as: Videos/Star Trek: Mark of Gidion.mkv
#
# NOTE: The title with a subtitle preceded by a ":", will only be included if there is a subtitle
#       in the program guide otherwise the title will be the filename. This is the one case where
#       the export format is dynamically altered.
#
generic=Review/%TITLE%: %SUBTITLE%
#
# END  mythvidexport variables section--------------------------------------------------------------------

#
# START DVB Subtitle variables section---------------------------------------------------
#
[dvb_subtitles]
#
# These variable are ONLY relevant when your recording has DVB Subtitle track(s) AND
# you want to add those subtitles to the final lossless cut mkv file.
#
# The default is to NOT include DVB Subtitles. This is only set as false as the
# ProjectX utility requires that a Java runtime also be installed. Some users may not wish to
# automatically install a Java runtime. Especially when they do not have or want DVB Subtitles.
#
# If you want DVB subtitle support then you must install a Java runtime. Example:
# > sudo apt-get install libcommons-net-java default-jre
# OR for the Sun Java runtime:
# > sudo apt-get install java2-runtime
# Then change the following configuration variable to "true" with no surrounding quotes.
#
# Default: "false"
# Valid options: "true" or "false" with NO surrounding quotes
include_dvb_subtitles=false
#
#  This is NOT a ProjectX parameter but impacts the syncronization of
#  the DVB subtitle track(s).
#  The DVB Subtitle delay variable is only used when DVB Subtitle tracks are
#  merged with the final mkv file. This is not the same as the "-D" option
#  used to change the video track +/- start time. Although confusing it has
#  been observed that ProjectX can sometimes produces out of sync subtitles.
#  This configuration variable can be used without effecting either the
#  audio or video tracks.
#
# Valid values: A plus or minus integer in milliseconds where
#               one second = 1000 and one minute = 60000
#
# Note: A negative number STARTS the subtitle track SOONER and a positive
#       number DELAYS when the Subtitle track displays, relative to the video
#       track. Be aware that Lossless Cut already applies any delay value
#       for each subtitle track when one has been identified in the
#       original recording's Subtitle track information, identified as
#       "Delay_relative_to_video". The varible below is added to any existing
#       delay value.
#
# Default: 0 (zero no delay change)
vobsub_delay=0
#
## The following are ProjectX variables will be used at DVB Subtitle extraction time
## and during the mkvmerge of the resulting (idx/sub) files as a S_VobSub track into
## the final lossless cut mkv file.
##
## NOTE: During testing it was noted that these ProjectX parameters do not seem to impact
##       the DVB Subititle track. It is suspected that they maybe intended for teletext
##       subtitles. They are included here for completeness but are solely handled by
##       ProjectX and have no influence on the Lossless Cut script itself,
#
## NOTE: Unless you understand how ProjectX uses these variables do not change them. They are
##       only exposed for your convience with NO edit checks have been added to the Lossless Cut
##       script.
#
# Shift the subtitle display position +/- X pixels from the default top position of the video
# Shift the subtitle display position +/- Y pixels from the default left position of the video
# NOTE: Changing the left position to a negative value may be required as long subtitle text
#       has a tendacy to being cut off on the righthand side of the video with ProjectX. This
#       is a known issue.
# NOTE: During testing this parameter did not seem to make any difference at all.
#
# Default: X and Y are expressed as "X,Y" making the default "0,0" without the quotes
moveposition=0,0
#
## Force the subtitle to be identified as a specific language.
## For example a value of "2" forces Polish. You need to determine the language codes
## yourself through the ProjectX GUI. Lossless Cut attempts to determine and set the
## language code using the recording's DVB Subtitle track metadata so unless it is
## absolutely required do not use this configuration setting.
#
# Default: "auto" as a zero "0"
ttxlanguagepair=0
#
## The following settings are directly from the subtitle tab screen on the ProjectX GUI
## Unfortunitely the help "hint" does not have a consistent number of variables
## versus what the defaults "26;10;32;80;560;720;576;-1;4;3;1" (9 hints Vs 11 defaults).
## With help hint as:
## "Offsets from left bottom, Front point size, Background Alpha, Yoffset, Xoffset,
## Xwidth, H(unused), V, Yoffset2, maxlines"
## As such these valuables will considered set in the order displayed
## below. All variables are labled on a "best effort" bases.
## Valid options: All values are integers with some logically supporting negative numbers
#
# Default: 26
font_point_size=26
# Default: 10
#          Assuming this means 10 percent transparency for the background text color
background_alpha=10
# Default: 32
yoffset=32
# Default: 80
xoffset=80
# Default: 560
# NOTE: This variable may be dynamically set when ProjectX determines
#       an input video's actual height
xwidth=560
# Default: 720
# NOTE: TThis variable may be dynamically set when ProjectX determines
#       an input video's actual width. It is unknown why the help hint
#       says this varible is unused.
h_unused=720
# Default: 576
vertical=576
# Default: -1
yoffset2=-1
#
## The following variable labels are a complete guess as the number of
## variable does not match the help hint, as mentioned above.
# Default: 4
maxlines=4
# Default: 3
unknown_1=3
# Default: 1
unknown_2=1
#
# END DVB Subtitle variables section--------------------------------------------------------------------

#
# START Remove recorded variables section---------------------------------------------------
#
[remove_recorded]
#
# This section is only relevant when used with the "-e" MythExport and "-m" move/copy
# Lossless Cut options.
#
# All variables can be modified but only as documented. To change a variable
# value remove the leading '#' (if any) and change the value (after the ':' or "="). Limited editing
# is performed so be careful. Without caution you can cause Lossless Cut to fail or abort.
#
# The default is to NOT delete the original recorded file after either export or move
# but sometimes you want to perform a Lossless Cut and have the original recording
# automatically deleted. Examples: News programs, low value recordings and recordings
# that you never commercial flag. These program examples are the kind where this option
# has value.
#
# Default: all variables commented out
#
# Valid options:
#   a) 525;             (channel number followed by a semi-colon)
#   b) 525;PBS News     (channel number followed by a semi-colon then a program title)
#   c) Simpsons         (program title)
#
#   (a) Will delete all Lossless Cut recordings with the channel number (e.g. 525)
#       after a successful move or export
#   (b) Will delete all Lossless Cut recording with a matching channel number (e.g. 525)
#       and the program title matches (e.g. "PBS News") after a successful move or export
#   (c) Will delete all Lossless Cut recordings from ANY channel when the program title
#       matches (e.g. "Simpsons") after a successful move or export
#
# NOTES:
# 1) If a channel number is specified it must be before a program title
# 2) Program title text should not be surrounded by quotes
# 3) Channels must be integers and have a semi-colon added to the end otherwise the
#    number will be treated as a program title
# 4) Title matching is performed after both the program title and the configuration
#    variable "title" have their punctuation removed and converted to lower case.
# 5) Only include one "Remove Recording" variable(s) per "delete_rec" line and each
#    must have a unique sequence number "_XX". You can added as many "delete_rec" lines
#    as your need. The leading "0" is optional but you must include a sequence number.
# 6) If you want to ALWAYS delete the original recording (think carefully!!!),
#    add a "delete_rec_all=ALL" line and any other entries will be ignored.
#    If the line is not exactly as specified, less the quotes, it will cause an
#    error and the script will abort. !!!! AGAIN, THINK CAREFULLY !!!!
#
#delete_rec_01=
#delete_rec_02=
#delete_rec_03=
#delete_rec_04=
#delete_rec_05=
#
# END Remove recorded variables section--------------------------------------------------------------------

#
# START Mkvmerge user settings section---------------------------------------------------
#
[mkvmerge_user_settings]
#
# This section should only be used if you understand how MKVToolsNix's utility mkvmerge
# works and what the command line options actually do. Lossless Cut does not edit
# either of these variables. It only adds them (if they exist) to the command line arguments
# respectively for the cut processing or the merge processing.
#
# Both of these settings work with "-r" replace, "-e" export, "-m" move.
# While only the "mkvmerge_cut_addon" settings is used with "-C" Concert Cuts as it only
# performs the cut step and never the merge step.
#
# Without understanding what you are doing you can easily cause Lossless Cut to abort.
# In most cases you do not need to enable or use either of these variables.
# If used these variables will be added to ALL lossless_cut.py processing, there are no
# command line overrides.
#
# An example use of one of these variables:
#    Mkvmerge sets Audio Track 1 as the default audio track. This switch stops it setting
#    any track as default. The player (mythtv in this case) then sets the audio track
#    based on its own logic:
#       mkvmerge_merge_addon=--default-track -1:0
#
# The default is for both variables to be commented out with a leading "#" character. To
# enable either of these settings, the leading "#" must be removed and the variable
# string is added after the "=" sign.
#
# This variable is added to the mkvmerge command line which cuts the recorded file
#mkvmerge_cut_addon=
#
# This variable is added to the mkvmerge command line which merges the cut segments into
# the final lossless cut mkv file
#mkvmerge_merge_addon=
#
# END Mkvmerge user settings section--------------------------------------------------------------------

#
# START Error detection user settings section---------------------------------------------------
#
[error_detection]
#
# This section should only be used if you want fine tuned
# control when errors are detected in the original recorded video file.
# Actions include an outright abort of the script or simply add comments to the
# job queue when specific thresholds are met. Depending on what options are
# used automatically override any remove or replace the original recording.
#
# In most cases users do not need to touch this section.
#
# NOTE: If you activate these variables you MUST also add the "-j %JOBID%"
#       option to your lossless_cut userjob(s). For example:
#
#   User Job description: LL Cut to MythVideo
#   User Job command: /usr/bin/lossless_cut -f "%DIR%/%FILE%" -e -j %JOBID%
#
# NOTE: If your bash command requires a ";" charcater you must change each
#       ";" to a "\;" character combination as a single ";" is reserved in a
#       python configuration file as a in-line comment
# NOTE: If the #3 bash command must contain
#       a "," comma then make the bash command into a shell script and
#       replace the bash command with the path to the executable shell
#       script. For example "/my error/script.sh"
#
# These settings work differently depending on which of the following options are
# chosen "-r" replace, "-e" export, "-m" move and all configuration settings from
# the "remove_recorded" configuration section.
#
# There are two type of actions:
#   An "alert" or "abort", both are triggered when a specific threshold
#   number of errors are returned on STDOUT by a bash command.
#
# Depending on the other options the following will occur:
#   1) For an "alert" rule:
#      a) With "-e" export or "-m" move but NO "remove_recorded" match then:
#         The lossless cut mkv file will be created and an alert message will
#         be added to the job queue comments and the job_queue status will be
#         set to errored.
#      b) With "-e" export or "-m" move but a "remove_recorded" match then:
#         The lossless cut mkv file will be created, the alert message will
#         be added to the job queue comments and the job_queue status will be
#         set to aborted. NO removal of the original recording will occur.
#      c) With "-r" replace:
#         The mkv video file will be created and left in the same storage
#         group as the original recording BUT a replace action will NOT
#         occur. The alert message will be added to the job queue comments
#         and the job_queue status will be set to aborted.
#   2) For an "abort" rule:
#      No matter what options are specified the MKV video file will not be
#      created and no replace or removal will occur. The abort message
#      will be added to the job queue comments and the job_queue status
#      will be set to aborted.
#
# Here is an example scenario for the "error_detection" variables:
#   Your userjob specifies the "-r" replace option but occasionally has
#   recordings which mkvmerge detects as having GOP errors. Most of the time the
#   resulting lossless cut MKV file is useless. You want to be warned when
#   a specific number of GOP errors have been detected but still would like to
#   try the MKV file. When the GOP errors are excessive you do
#   not want to have the MKV created. In both cases you do NOT want
#   the original recording replaced.
#
#   To cover this situation you would need two configuration variables.
#     error_detection_01=alert, 30, cat "%(logfile)s" | grep -c "GOP", %(error_cnt)s GOP errors detected
#     error_detection_02=abort, 99, cat "%(logfile)s" | grep -c "GOP", Excessive number "%(error_cnt)s" of GOP errors
#
# You can use any of these four dynamic variables:
#   %(recordedfile)s - The MythTV recorded absolute path and filename
#   %(base_name)s    - The MythTV recorded filename (no path)
#   %(logfile)s      - The Lossless Cut log file for this userjob
#   %(error_cnt)s    - The number of errors that were returned by the bash command
#
# The configuration variable is made up of the initial
# "error_detection_XX=" or "error_detection_XX:" with a sequence number to
# make the variable unique but without the quotes. Followed by
# four comma separated strings in the following order:
#   1) "alert" or "abort" without the quotes. This denotes the type of error.
#   2) The threshold integer value which when reached will trigger the actions
#      described above.
#   3) The bash command(s) or executable path and file name
#      which will return nothing OR an integer value that will be
#      compared against the #2 threshold value. When nothing is
#      returned it is treated as a zero "0".
#   4) The JobQueue comment string limited to 128 characters or if it exceeds
#      that limit will be automatically truncated.
# NOTE: If either the #3 bash command or #4 JobQueue comment must contain
#       a ";" semicolon change those instances to a "\;" character combination.
#       Just like in the example above.
# NOTE: If the #3 bash command must contain a "," comma
#       then make the bash command into a shell script and
#       replace the bash command with the path to the executable shell
#       script. For example "/my error/script.sh"
# NOTE: Be aware that the bash command or executable, is run only
#       after the mkvmerge merge step which is after the cut step. This has
#       to be in that order so that all the conditions described above can
#       be supported. Proper file clean up will occur.
#
# You can have any number of these error_detection_XX variables but each must
# have a unique name. Use sequence numbers for make the variable name unique.
# By default none are active.
#
#error_detection_01=
#
# END Error detection user settings section--------------------------------------------------------------------
